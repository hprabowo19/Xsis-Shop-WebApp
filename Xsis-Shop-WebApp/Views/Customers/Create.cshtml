@model Xsis_Shop_ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Customers";
    ViewBag.Subtitle = "Create";
    ViewBag.SelectedCustomers = "active toggled";
}

<style>
    .validation-summary-errors ul li {
        list-style-type: none;
        padding-top: 20px;
    }
</style>

<div class="block-header">
    <h2>@ViewBag.Subtitle Customer</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="card">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="card-body card-padding">
        <form role="form">
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.FirstName, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.LastName, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.City, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Country, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Phone, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
            <div class="form-group fg-float">
                <div class="fg-line">
                    @Html.LabelFor(model => model.Email, new { @class = "fg-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control fg-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn bgm-teal m-t-10">Create</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right btn bgm-bluegray m-t-10" })
        </form>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
