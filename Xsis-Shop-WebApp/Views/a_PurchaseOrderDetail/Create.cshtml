@model Xsis_Shop_ViewModels.a_PurchaseOrderDetailViewModel
@{
    ViewBag.Title = "a_PurchaseOrderDetail";
    ViewBag.Subtitle = "Create";
    ViewBag.Selecteda_PurchaseOrderDetail = "active toggled";
    ViewBag.Selecteda_PurchaseOrderDetailCreate = "active";
}
<style>

    #Code, #TotalAmount {
        font-weight: bold;
    }

    .myModalContent {
        color: dimgray;
    }

    .tbody > tr > td:nth-child(n) {
        vertical-align: middle;
    }
</style>
<div class="block-header">
    <h2>@ViewBag.Subtitle a_PurchaseOrderDetail</h2>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>a_PurchaseOrderDetail</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseOrderID, "PurchaseOrderID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PurchaseOrderID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PurchaseOrderID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductID, "ProductID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}
@*<div class="modal fade" id="OrderItemModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="OrderItemModalContent"></div>
            </div>
        </div>
    </div>*@
@section Scripts {
    @*<script>
        window.onload = function () {
                GetListOrderItem();
                setDateTime();
            }</script>*@
    @Scripts.Render("~/bundles/jqueryval")
}